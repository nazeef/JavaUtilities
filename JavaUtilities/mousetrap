import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class mouseTrap {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Position pos=new Position();
		pos.x=3;pos.y=3;
		
		int n=8;
		char board[][]=new char[n][n];
		Scanner sc=new Scanner(System.in);  
		
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				
				board[i][j]='-';
				
			}
		}
		board[3][3]='M';
		//board[1][1]='O';
		//board[2][4]='O';
		print(board);
		
		int i=0;
		while(i<40){
			//take input from user
			System.out.println("select hole");
			String input=sc.next();
			int p=Integer.parseInt(input.split(",")[0]);
			int q=Integer.parseInt(input.split(",")[1]);
			
			board[p][q]='O';
			
			Position newPos = find(board,pos);
			if(newPos==null){
				break;
			}
			System.out.println(newPos.x +" "+newPos.y);
			board[newPos.x][newPos.y]='M';
			board[pos.x][pos.y]='-';
			pos.x=newPos.x;
			pos.y=newPos.y;
			
		    i++;
		    print(board);
		}
		
	}

	private static Position find(char[][] board,Position pos) {
		// TODO Auto-generated method stub
		int x=pos.x;
		int y=pos.y;
		List<Position> list = new ArrayList<Position>();
		
		for(int i=-1;i<=1;i++){
			for(int j=-1;j<=1;j++){
				if(((x+i)<0 ||(x+i)>7 || (y+j)<0 ||(y+j)>7 || board[x+i][y+j]=='O' || (i==0 && j==0))){
					
				}else{
					System.out.println((x+i)+" "+(y+j));
					int holes=search9(board,x+i,y+j);
					Position temp=new Position();
					temp.x=(x+i); temp.y=(y+j);temp.surrHoles=holes;
					list.add(temp);
				}
			}
		}
		/*find best*/
		Position fin=findBestSpot(list);
		//System.out.println(fin.x +" "+fin.y);
		return fin;
	}

	private static int search9(char[][] board, int x, int y) {
		// TODO Auto-generated method stub
		int holes=0;
		for(int i=-1;i<=1;i++){
			for(int j=-1;j<=1;j++){
				if(((x+i)<0 ||(x+i)>7 || (y+j)<0 ||(y+j)>7 )){
					
				}else{
					if(board[x+i][y+j]=='O'){
						holes++;
					}
					
				}
			}
		}
		System.out.println(holes);
		
		return holes;
	}

	private static Position findBestSpot(List<Position> list) {
		if(list.size()==0){
			System.out.println("YOU LOST!");
			return null;
		}
		int min=9;
		List<Position> finalList = new ArrayList<Position>();
		for(int i=0;i<list.size();i++){
			if(list.get(i).surrHoles<min){
				min=list.get(i).surrHoles;
			}
		}
		for(int i=0;i<list.size();i++){
			if(list.get(i).surrHoles==min){
				finalList.add(list.get(i));
			}
		}
		int random=(int) Math.floor(Math.random() * (finalList.size()));
		
		return finalList.get(random);	
	}
	
	public static void print(char board[][]){
		for(int i=0;i<board.length;i++){
			for(int j=0;j<board.length;j++){
				
				System.out.print(board[i][j]+ " | ");
				
			}
			System.out.println();
		}
	}
}
//------------------------------------------------------------------------------------------------

public class Position {
	int x,y,surrHoles;
}
